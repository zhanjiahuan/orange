# -*- coding: utf-8 -*-
# Generated by Django 1.11.12 on 2018-12-02 16:52
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.CharField(max_length=50, unique=True)),
                ('realname', models.CharField(blank=True, max_length=50, null=True)),
                ('sex', models.CharField(blank=True, max_length=10, null=True)),
                ('birthday', models.DateTimeField(blank=True, null=True)),
                ('pay_password', models.CharField(blank=True, max_length=100, null=True)),
                ('question', models.CharField(blank=True, max_length=100, null=True)),
                ('answer', models.CharField(blank=True, max_length=100, null=True)),
                ('balance', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('points', models.IntegerField(blank=True, null=True)),
                ('phone', models.CharField(max_length=11, null=True, unique=True)),
                ('is_vip', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('is_delete', models.IntegerField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BankCard',
            fields=[
                ('card_id', models.AutoField(primary_key=True, serialize=False)),
                ('card_num', models.CharField(max_length=30)),
                ('card_type', models.IntegerField(blank=True, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('is_delete', models.IntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'bank_card',
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('collection_id', models.AutoField(primary_key=True, serialize=False)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('is_delete', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'collection',
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('coupon_id', models.AutoField(primary_key=True, serialize=False)),
                ('value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('begin_date', models.DateTimeField(blank=True, null=True)),
                ('invalid_date', models.DateTimeField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('is_delete', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'coupon',
            },
        ),
        migrations.CreateModel(
            name='Creator',
            fields=[
                ('creator_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('is_delete', models.IntegerField()),
            ],
            options={
                'db_table': 'creator',
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
            },
        ),
        migrations.CreateModel(
            name='Goods',
            fields=[
                ('goods_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('sort', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField()),
                ('is_delete', models.IntegerField()),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='main.Creator')),
            ],
            options={
                'db_table': 'goods',
            },
        ),
        migrations.CreateModel(
            name='GoodsCategory',
            fields=[
                ('cate_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('create_time', models.DateTimeField()),
                ('is_delete', models.IntegerField()),
            ],
            options={
                'db_table': 'goods_category',
            },
        ),
        migrations.CreateModel(
            name='GoodsDetail',
            fields=[
                ('detail_id', models.IntegerField(primary_key=True, serialize=False)),
                ('brand_name', models.CharField(max_length=50)),
                ('brand_id', models.IntegerField(blank=True, null=True)),
                ('sale_state', models.IntegerField()),
                ('desc', models.TextField(blank=True, null=True)),
                ('origin_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('promote_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('title', models.CharField(max_length=100)),
                ('stock', models.IntegerField()),
                ('image', models.CharField(max_length=255)),
                ('is_delete', models.IntegerField(blank=True, null=True)),
                ('goods', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='goods_detail', to='main.Goods')),
            ],
            options={
                'db_table': 'goods_detail',
            },
        ),
        migrations.CreateModel(
            name='GoodsParam',
            fields=[
                ('param_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('is_delete', models.IntegerField()),
                ('goods', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='goods_params', to='main.Goods')),
            ],
            options={
                'db_table': 'goods_param',
            },
        ),
        migrations.CreateModel(
            name='GoodsParamValue',
            fields=[
                ('param_value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=255)),
                ('is_delete', models.IntegerField()),
                ('param', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='params', to='main.GoodsParam')),
            ],
            options={
                'db_table': 'goods_param_value',
            },
        ),
        migrations.CreateModel(
            name='GoodsSku',
            fields=[
                ('sku_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('values', models.CharField(max_length=100)),
                ('is_delete', models.IntegerField()),
                ('goods', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='goods_sku', to='main.Goods')),
            ],
            options={
                'db_table': 'goods_sku',
            },
        ),
        migrations.CreateModel(
            name='GoodsSubcategory',
            fields=[
                ('sub_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('status', models.IntegerField()),
                ('sort', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('is_delete', models.IntegerField()),
                ('cate', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='cates', to='main.GoodsCategory')),
            ],
            options={
                'db_table': 'goods_subcategory',
            },
        ),
        migrations.CreateModel(
            name='GoodsType',
            fields=[
                ('type_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('status', models.IntegerField()),
                ('sort', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('is_delete', models.IntegerField()),
                ('sub', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='subs', to='main.GoodsSubcategory')),
            ],
            options={
                'db_table': 'goods_type',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_id', models.IntegerField(primary_key=True, serialize=False)),
                ('goods_count', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('is_delete', models.IntegerField(blank=True, null=True)),
                ('goods', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.Goods')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'order',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('review_id', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('img', models.CharField(blank=True, max_length=100, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('is_delete', models.IntegerField(blank=True, null=True)),
                ('goods', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.Goods')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'review',
            },
        ),
        migrations.CreateModel(
            name='UserLoc',
            fields=[
                ('loc_id', models.AutoField(primary_key=True, serialize=False)),
                ('province', models.CharField(blank=True, max_length=100, null=True)),
                ('detail_loc', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('is_delete', models.IntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_loc',
            },
        ),
        migrations.CreateModel(
            name='UserMsg',
            fields=[
                ('user_msg_id', models.AutoField(primary_key=True, serialize=False)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('msg_title', models.CharField(max_length=100)),
                ('msg_img', models.CharField(blank=True, max_length=100, null=True)),
                ('msg_content', models.TextField()),
                ('status', models.IntegerField(blank=True, null=True)),
                ('is_delete', models.IntegerField(blank=True, db_column='is-delete', null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_msg',
            },
        ),
        migrations.AddField(
            model_name='goods',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='types', to='main.GoodsType'),
        ),
        migrations.AddField(
            model_name='coupon',
            name='creator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.Creator'),
        ),
        migrations.AddField(
            model_name='coupon',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_coupons', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='collection',
            name='goods',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.Goods'),
        ),
        migrations.AddField(
            model_name='collection',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
    ]
